<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tou.jishu.xiao.mapping.AccountMapper">
  <resultMap id="BaseResultMap" type="tou.jishu.xiao.po.Account">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="freeze" jdbcType="DOUBLE" property="freeze" />
    <result column="payout" jdbcType="DOUBLE" property="payout" />
    <result column="payback" jdbcType="DOUBLE" property="payback" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="uptime" jdbcType="TIMESTAMP" property="uptime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="Isdel" jdbcType="BIT" property="isdel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, amount, freeze, payout, payback, status, addtime, uptime, version, Isdel
  </sql>
  <select id="selectByExample" parameterType="tou.jishu.xiao.po.AccountExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tou.jishu.xiao.po.AccountExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tou.jishu.xiao.po.Account">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into account (id, name, amount, 
      freeze, payout, payback, 
      status, addtime, uptime, 
      version, Isdel)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, 
      #{freeze,jdbcType=DOUBLE}, #{payout,jdbcType=DOUBLE}, #{payback,jdbcType=DOUBLE}, 
      #{status,jdbcType=INTEGER}, #{addtime,jdbcType=TIMESTAMP}, #{uptime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER}, #{isdel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="tou.jishu.xiao.po.Account">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
      <if test="payout != null">
        payout,
      </if>
      <if test="payback != null">
        payback,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="uptime != null">
        uptime,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="isdel != null">
        Isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=DOUBLE},
      </if>
      <if test="payout != null">
        #{payout,jdbcType=DOUBLE},
      </if>
      <if test="payback != null">
        #{payback,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tou.jishu.xiao.po.AccountExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.freeze != null">
        freeze = #{record.freeze,jdbcType=DOUBLE},
      </if>
      <if test="record.payout != null">
        payout = #{record.payout,jdbcType=DOUBLE},
      </if>
      <if test="record.payback != null">
        payback = #{record.payback,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null">
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uptime != null">
        uptime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.isdel != null">
        Isdel = #{record.isdel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DOUBLE},
      freeze = #{record.freeze,jdbcType=DOUBLE},
      payout = #{record.payout,jdbcType=DOUBLE},
      payback = #{record.payback,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      uptime = #{record.uptime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      Isdel = #{record.isdel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tou.jishu.xiao.po.Account">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="freeze != null">
        freeze = #{freeze,jdbcType=DOUBLE},
      </if>
      <if test="payout != null">
        payout = #{payout,jdbcType=DOUBLE},
      </if>
      <if test="payback != null">
        payback = #{payback,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptime != null">
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        Isdel = #{isdel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tou.jishu.xiao.po.Account">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    set name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      freeze = #{freeze,jdbcType=DOUBLE},
      payout = #{payout,jdbcType=DOUBLE},
      payback = #{payback,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      uptime = #{uptime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      Isdel = #{isdel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>